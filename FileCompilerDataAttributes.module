<?php namespace ProcessWire;

/**
 *
 * File Compiler Data Attributes
 *
 * @author Robin Sallis
 *
 * ProcessWire 3.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class FileCompilerDataAttributes extends FileCompilerModule implements ConfigurableModule {

	/**
	 * Module information
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'File Compiler Data Attributes',
			'summary' => 'A proof of concept module for populating markup elements according to data attributes containing a field name.',
			'version' => '0.1.0',
			'author' => 'Robin Sallis',
			'href' => 'https://github.com/Toutouwai/FileCompilerDataAttributes',
			'icon' => 'html5',
			'requires' => 'ProcessWire>=3.0.0',
		);
	}

	/**
	 * Compile a section of markup
	 *
	 * @param string $data
	 * @return string
	 */
	public function compileMarkup($data) {
		
		$page = $this->wire('page');

		// Parse HTML
		if(!function_exists('str_get_html')) {
			require_once __DIR__ . '/simple_html_dom.php';
		}
		$html = str_get_html($data);

		// Loop over elements with data-field attributes
		foreach($html->find('[data-field]') as $el) {
			$field_name = $el->{'data-field'};
			// Field must exist in the page's template
			if($page->$field_name === null) continue;
			// Add echo statement for field
			$insert = '<?php echo (string) $page->' . $field_name . ' ?>';
			$el->innertext = $insert . $el->innertext;
			if($this->strip_attribute) $el->removeAttribute('data-field');
		}

		return (string) $html;
	}

	/**
	 * Config inputfields
	 *
	 * @param InputfieldWrapper $inputfields
	 */
	public function getModuleConfigInputfields(InputfieldWrapper $inputfields) {
		parent::getModuleConfigInputfields($inputfields);
		$modules = $this->wire('modules');

		/* @var InputfieldCheckbox $f */
		$f = $modules->InputfieldCheckbox;
		$f_name = 'strip_attribute';
		$f->name = $f_name;
		$f->label = $this->_('Strip data-field attributes during compilation');
		$f->checked = $this->$f_name === 1 ? 'checked' : '';
		$f->columnWidth = 50;
		$inputfields->add($f);

	}

}
